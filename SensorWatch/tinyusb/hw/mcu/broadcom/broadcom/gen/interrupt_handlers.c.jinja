#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#include "broadcom/defines.h"

// This catches non-interrupt exceptions that are similar to Cortex-M hard faults.
__attribute__((weak)) void HardFault_IRQHandler(void) {
    while (true) {}
}

// TODO: Route I2C, SPI and UART based on AUX_IRQ and PACTL_CS

{% for aux in ("UART1", "SPI1", "SPI2") %}
__attribute__((weak)) void {{ aux }}_IRQHandler(void) {
    while(true) {}
}
{% endfor %}

{% for i in range(interrupt_count) %}
{% if i in bcm2711_interrupt_names %}
{% set name, description = bcm2711_interrupt_names[i] %}
{% if i not in bcm2711_to_bcm283x %}
#if BCM_VERSION == 2711
{% endif %}
// {{ i }}: {{ description }}
__attribute__((weak)) void {{ name }}_IRQHandler(void) {
{% if name == "AUX" %}
    while (AUX->IRQ != 0) {
        if (AUX->IRQ_b.UART_1) {
            UART1_IRQHandler();
        } else if (AUX->IRQ_b.SPI_1) {
            SPI1_IRQHandler();
        } else if (AUX->IRQ_b.SPI_2) {
            SPI2_IRQHandler();
        }
    }
{% else %}
    while(true) {}
{% endif %}
}
{% if i not in bcm2711_to_bcm283x %}
#endif
{% endif %}

{% endif %}
{% endfor %}

#if BCM_VERSION != 2711
void* interrupt_handlers[{{ bcm283x_interrupt_count }}] = {
{% for i in range(bcm283x_interrupt_count) %}
{% if i in bcm283x_interrupt_names %}
{% set name, description = bcm283x_interrupt_names[i] %}
  {{ name }}_IRQHandler,
{%- else %}
  NULL,
{%- endif %} // {{ i }}
{% endfor %}
};
#else
void* interrupt_handlers[{{ bcm2711_interrupt_count }}] = {
{% for i in range(bcm2711_interrupt_count) %}
{% if i in bcm2711_interrupt_names %}
{% set name, description = bcm2711_interrupt_names[i] %}
  {{ name }}_IRQHandler,
{%- else %}
  NULL,
{%- endif %} // {{ i }}
{% endfor %}  
};
#endif
